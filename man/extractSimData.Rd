% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ExtractSimData.R
\name{extractSimData}
\alias{extractSimData}
\title{extractSimData}
\usage{
extractSimData(
  simulationData,
  targetLocations,
  targetLocationNames = NULL,
  func = mean,
  beginDate = Sys.Date()
)
}
\arguments{
\item{simulationData}{a list of netCDF simulation data in rasterStack format (e.g., "datList" object)}

\item{targetLocations}{locations to extract data from; must be class SpatialPointsDataFrame or SpatialPolygonsDataFrame}

\item{targetLocationNames}{option to specify the name of target locations (e.g., pts$gage)}

\item{func}{function to apply to the data  (if multiple raster cells are in location of interest). The function name can be a character string or the function object (i.e., "mean" and mean produce identical output)}

\item{beginDate}{disregarded; this is now determined internally. the first date in the simulation time series}
}
\value{
a list.
This function extracts simulation data for spatial locations of interest (polygons, points)
It returns a list with four objects (permutations of the same data): 
(1) a list with a dataframe for each simulation data time series for each target location, 
(2) a list with a dataframe for each target location: rows = simulations, columns = days. Useful in cluster analysis
(3) a wide dataframe, and 
(4) a long dataframe
}
\description{
This function extracts data and aggregates EverForecast simulation data (contained in a list of netCDFs) for spatial locations of interest. The output is a list of four permutations of the same data. This function can take a very long time depending on the number of regions-of-interest and their size (e.g., 2 hours for ~50 Combined Operations Plan indicator regions).
}
\examples{
### step 1: identify region(s) of interest
locs   <- IRMap[[2]]
loc    <- locs[locs$INDICATOR \%in\% 118:119, ]
### step 2: homogenize projections (or let the function do this internally)
# loc  <- spTransform(loc, crs(edenDEM))

### step 3: load EverForeCast data from netCDFs
### available here: 
### https://s3.amazonaws.com/jem.models.headless/Ever4Cast_2020_12/simulations_interpolated.zip
# simDat  <- loadSims()

# step 4: extract simulation data at each ROIs
# EFDat <- extractSimData(simulationData      = simDat, 
#                           targetLocations     = loc, 
#                           targetLocationNames = loc$NAME)
}
